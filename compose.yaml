services:

  testrunner:
    image: $DEV_IMAGE_TAG
    build:
      dockerfile: Dockerfile.dev
      context: .
      args:
        OTP_VERSION: $OTP_VERSION
        THRIFT_VERSION: $THRIFT_VERSION
    volumes:
      - .:$PWD
    hostname: $SERVICE_NAME
    working_dir: $PWD
    command: /sbin/init
    depends_on:
      dmt:
        condition: service_healthy
      machinegun:
        condition: service_healthy
      shumway:
        condition: service_healthy
      liminator:
        condition: service_healthy

  dmt:
    image: ghcr.io/valitydev/dominant-v2:sha-ba60639-epic-fixes_for_client
    command: /opt/dmt/bin/dmt foreground
    healthcheck:
      test: "/opt/dmt/bin/dmt ping"
      interval: 5s
      timeout: 3s
      retries: 12
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./test/dmt/sys.config:/opt/dmt/releases/0.1/sys.config

  machinegun:
    image: ghcr.io/valitydev/machinegun:sha-5c0db56
    command: /opt/machinegun/bin/machinegun foreground
    volumes:
      - ./test/machinegun/config.yaml:/opt/machinegun/etc/config.yaml
      - ./test/machinegun/cookie:/opt/machinegun/etc/cookie
    healthcheck:
      test: "/opt/machinegun/bin/machinegun ping"
      interval: 5s
      timeout: 1s
      retries: 10

  shumway:
    image: docker.io/rbkmoney/shumway:44eb989065b27be619acd16b12ebdb2288b46c36
    restart: unless-stopped
    entrypoint:
      - java
      - -Xmx512m
      - -jar
      - /opt/shumway/shumway.jar
      - --spring.datasource.url=jdbc:postgresql://db:5432/shumway
      - --spring.datasource.username=shumway
      - --spring.datasource.password=postgres
      - --management.metrics.export.statsd.enabled=false
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: "curl http://localhost:8022/actuator/health"
      interval: 5s
      timeout: 1s
      retries: 20

  liminator:
    image: ghcr.io/valitydev/liminator:sha-fc6546f
    restart: unless-stopped
    entrypoint:
      - java
      - -Xmx512m
      - -jar
      - /opt/liminator/liminator.jar
      - --spring.datasource.url=jdbc:postgresql://db:5432/liminator
      - --spring.datasource.username=liminator
      - --spring.datasource.password=postgres
      - --service.skipExistedHoldOps=false
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: "curl http://localhost:8022/actuator/health"
      interval: 5s
      timeout: 1s
      retries: 20

  db:
    image: postgres:15-bookworm
    command: -c 'max_connections=1000'
    environment:
      POSTGRES_MULTIPLE_DATABASES: "dmt,shumway,liminator"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - ./test/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hellgate"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
